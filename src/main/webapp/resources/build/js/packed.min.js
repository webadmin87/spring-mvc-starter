!function(angular,window){window.MVC_STARTER_APP="springMvcStarter",angular.module(MVC_STARTER_APP,["ngResource","ui.router","ui.bootstrap","ui.grid","ui.grid.pagination","textAngular","angularFileUpload","pascalprecht.translate","ngMessages"]).constant("urlMapping",{}).constant("uploaderParams",{url:"/admin/upload/"}).constant("urlUploaderParams",{url:"/admin/upload-by-url/"}).config(["$resourceProvider",function($resourceProvider){$resourceProvider.defaults.stripTrailingSlashes=!1}]).run(["$rootScope","userService","$state",function($rootScope,userService,$state){$rootScope.$on("$stateChangeStart",function(event,toState,toStateParams){return $rootScope.stateChangeBypass?void($rootScope.stateChangeBypass=!1):void(toState.data&&toState.data.roles&&(event.preventDefault(),userService.isAuth()&&userService.hasRole(toState.data.roles)?($rootScope.stateChangeBypass=!0,$state.go(toState,toStateParams)):($rootScope.stateChangeBypass=!1,alert("Forbidden 403"))))})}]).config(["$provide","$httpProvider",function($provide,$httpProvider){$httpProvider.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",$httpProvider.defaults.headers.common.Accept="*",$httpProvider.defaults.cache=!1,$provide.factory("AppHttpInterceptor",["$q","$location","authStorage",function($q,$location,authStorage){return{request:function(config){var user=authStorage.getUser();return user&&(config.headers["X-AUTH-TOKEN"]=user.token),config},responseError:function(rejection){return 401==rejection.status?(authStorage.reset(),$location.path("/login")):404==rejection.status&&$location.path("/not-found"),$q.reject(rejection)}}}]),$httpProvider.interceptors.push("AppHttpInterceptor")}]).config(["$sceProvider",function($sceProvider){$sceProvider.enabled(!1)}]).config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("main",{url:"/",templateUrl:"resources/views/index.html",controller:"MainCtrl"}),$stateProvider.state("login",{url:"/login",templateUrl:"resources/views/login.html",controller:"LoginCtrl"}),$stateProvider.state("notFound",{url:"/not-found",templateUrl:"resources/views/not-found.html",controller:"NotFoundCtrl"}),$stateProvider.state("users",{url:"/users",templateUrl:"resources/views/users/users.html",controller:"UserListCtrl",data:{roles:["ROLE_ADMIN"]}}),$stateProvider.state("users.add",{url:"/add",templateUrl:"resources/views/users/add.html",controller:"UserAddCtrl",data:{roles:["ROLE_ADMIN"]}}),$stateProvider.state("users.update",{url:"/update/:id",templateUrl:"resources/views/users/update.html",controller:"UserUpdateCtrl",data:{roles:["ROLE_ADMIN"]}})}])}(angular,window),function(angular){function AuthStorage(){var STORAGE_KEY="AUTH_STORAGE";this.setUser=function(u){localStorage.setItem(STORAGE_KEY,angular.toJson(u))},this.getUser=function(){return angular.fromJson(localStorage.getItem(STORAGE_KEY))},this.reset=function(){localStorage.removeItem(STORAGE_KEY)}}angular.module(MVC_STARTER_APP).service("authStorage",[AuthStorage])}(angular),function(angular,$,_){function GridService($translate,$timeout){this.getWrapper=function($scope){var GridWrapper=function(Resource,options,requestParams){var self=this;this.filter=null,this.filterTimeout=null,this.defaultPageSize=20,this.Resource=Resource,this.paginationOptions={page:1,pageSize:this.defaultPageSize,sortDirection:null,sortField:null},this.gridOptions=angular.extend({paginationPageSizes:[this.defaultPageSize,40,80],useExternalPagination:!0,paginationPageSize:this.defaultPageSize,useExternalSorting:!0},options),this.requestParams=requestParams||{},this.gridOptions.onRegisterApi=function(gridApi){self.gridApi=gridApi,gridApi.core.on.sortChanged($scope,function(grid,sortColumns){0==sortColumns.length?(self.paginationOptions.sortField=null,self.paginationOptions.sortDirection=null):(self.paginationOptions.sortField=sortColumns[0].field,self.paginationOptions.sortDirection=sortColumns[0].sort.direction.toUpperCase()),self.loadData()}),gridApi.pagination.on.paginationChanged($scope,function(newPage,pageSize){self.paginationOptions.page=newPage,self.paginationOptions.pageSize=pageSize,self.loadData()}),self.gridOptions.enableFiltering&&self.gridOptions.useExternalFiltering&&gridApi.core.on.filterChanged($scope,function(){self.filterTimeout&&($timeout.cancel(self.filterTimeout),self.filterTimeout=null);var grid=this.grid,filter={};for(var k in grid.columns){var col=grid.columns[k];col.enableFiltering&&col.filters[0].term&&(filter[col.field]=col.filters[0].term)}self.filter=angular.equals(filter,{})?null:filter,self.filterTimeout=$timeout(function(){self.loadData()},500)})}};return GridWrapper.prototype.loadData=function(){var self=this;return this.Resource.query(this.getRequestParams(),function(models,headers){self.gridOptions.data=models,self.gridOptions.totalItems=headers("X-pagination-total-elements")})},GridWrapper.prototype.remove=function(model){var self=this;$translate("Confirm remove?").then(function(mes){confirm(mes)&&model.$remove(function(){self.loadData()})})},GridWrapper.prototype.getRequestParams=function(){var params={};for(var k in this.paginationOptions)this.paginationOptions[k]&&(params[k]=this.paginationOptions[k]);return this.filter&&(params.filter=angular.toJson(this.filter)),angular.extend(params,this.requestParams)},GridWrapper}}angular.module(MVC_STARTER_APP).service("gridService",["$translate","$timeout",GridService])}(angular,jQuery,_),function(angular,$,_){function UserService($http,$q,authStorage,$resource,$cacheFactory){this.login=function(model){function loginSuccess(data,status,headers){200==status?(authStorage.setUser(data),deferred.resolve()):deferred.reject()}function loginError(){deferred.reject()}function transformRequest(data,headersGetter){return $.param(data)}var deferred=$q.defer();return $http.post("/login",model,{transformRequest:transformRequest,headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(loginSuccess).error(loginError),deferred.promise},this.logout=function(){authStorage.reset(),$cacheFactory.get("$http").removeAll()},this.getUser=function(){return authStorage.getUser()},this.setUser=function(u){return authStorage.setUser(u)},this.isAuth=function(){return null!=authStorage.getUser()};var resource=null;this.getResource=function(){return null==resource&&(resource=$resource("/admin/user/:id/",{id:"@id"},{roles:{url:"/admin/user/roles/",method:"GET",isArray:!0}})),resource},this.hasRole=function(roles){var user=this.getUser();return user?roles.indexOf(user.role)>-1:!1}}angular.module(MVC_STARTER_APP).service("userService",["$http","$q","authStorage","$resource","$cacheFactory",UserService])}(angular,jQuery,_),function(angular,_){function LoginCtrl($scope,userService,$state){userService.logout(),$scope.error,$scope.model={},$scope.login=function(model){var promise=userService.login(model);promise.then(function(){$state.go("main")},function(){$scope.error=!0})}}angular.module(MVC_STARTER_APP).controller("LoginCtrl",["$scope","userService","$state",LoginCtrl])}(angular,_),function(angular,_){function MainCtrl($scope){}angular.module(MVC_STARTER_APP).controller("MainCtrl",["$scope",MainCtrl])}(angular,_),function(angular,_){function NotFoundCtrl($scope){}angular.module(MVC_STARTER_APP).controller("NotFoundCtrl",["$scope",NotFoundCtrl])}(angular,_),function(angular,_){function UserAddCtrl($scope,userService,uploaderParams,$state){var Resource=userService.getResource();$scope.roles=Resource.roles(),$scope.model=new Resource({active:!0,filePaths:{},filesToRemove:[],role:"ROLE_ADMIN"}),$scope.uploaderParams=uploaderParams,$scope.save=function(form){var success=function(){$state.go("users"),$scope.gridWrapper.loadData()},error=function(res){$scope.result=!1,$scope.errors=res.data};$scope.model.$save(success,error)},$scope.update=!1}angular.module(MVC_STARTER_APP).controller("UserAddCtrl",["$scope","userService","uploaderParams","$state",UserAddCtrl])}(angular,_),function(angular,_){function UserInfoCtrl($scope,userService,$state){$scope.getUser=function(){return userService.getUser()},$scope.logout=function(){userService.logout(),$state.go("main")},$scope.isAuth=function(){return userService.isAuth()}}angular.module(MVC_STARTER_APP).controller("UserInfoCtrl",["$scope","userService","$state",UserInfoCtrl])}(angular,_),function(angular,_){function UserListCtrl($scope,userService,gridService,$translate){var Resource=userService.getResource(),Wrapper=gridService.getWrapper($scope);$translate(["Avatar","Username","Email","Actions"]).then(function(translations){$scope.gridWrapper=new Wrapper(Resource,{columnDefs:[{name:"previews",enableSorting:!1,enableFiltering:!1,displayName:translations.Avatar,cellTemplate:'<div class="ui-grid-cell-contents"><img preview-src="row.entity.previews" height="60" alt="" /></div>'},{name:"id"},{name:"username",displayName:translations.Username},{name:"email",displayName:translations.Email},{name:"Actions",enableSorting:!1,enableFiltering:!1,displayName:translations.Actions,cellTemplate:'<div class="ui-grid-cell-contents"><a ui-sref="users.update({id: row.entity.id})" class="glyphicon glyphicon-pencil"></a> <a href="" ng-click="grid.appScope.gridWrapper.remove(row.entity)" class="glyphicon glyphicon-trash"></a></div>'}],rowHeight:60,enableFiltering:!0,useExternalFiltering:!0}),$scope.gridWrapper.loadData()})}angular.module(MVC_STARTER_APP).controller("UserListCtrl",["$scope","userService","gridService","$translate",UserListCtrl])}(angular,_),function(angular,_){function UserUpdateCtrl($scope,userService,uploaderParams,$state,$stateParams){var Resource=userService.getResource();$scope.roles=Resource.roles(),$scope.model=Resource.get({id:$stateParams.id}),$scope.uploaderParams=uploaderParams,$scope.save=function(form){var success=function(data){userService.isAuth()&&userService.getUser().id==data.id&&userService.setUser(data),$state.go("users"),$scope.gridWrapper.loadData()},error=function(res){$scope.result=!1,$scope.errors=res.data};$scope.model.$save(success,error)},$scope.update=!0}angular.module(MVC_STARTER_APP).controller("UserUpdateCtrl",["$scope","userService","uploaderParams","$state","$stateParams",UserUpdateCtrl])}(angular,_),function(angular){angular.module(MVC_STARTER_APP).directive("emptyToNull",function(){return{restrict:"A",require:"ngModel",priority:10,link:function(scope,elem,attrs,ctrl){ctrl.$parsers.push(function(viewValue){return""===viewValue||void 0===viewValue?null:viewValue})}}})}(angular),function(angular,_){function FileUpload(FileUploader,$http,userService){var templateUrl="/resources/build/templates/fileUploadDirective.html";return{restrict:"AE",scope:{model:"=",uploaderParams:"=",urlUploaderParams:"="},controllerAs:"ctrl",controller:function($scope,$element,$attrs){function completeUpload(response){if(response){var key=self.getMaxKey($scope.model[$attrs.filesAttr])+1;$attrs.fileDescriptionsAttr&&($scope.model[$attrs.fileDescriptionsAttr][key]=""),$scope.model[$attrs.filesAttr][key]=response}}var required=["filesAttr","removeFilesAttr","uploaderParams","model"];for(var attr in required)if(!$attrs[required[attr]])throw new Error("Attribute "+attr+" can't be empty");$scope.filesAttr=$attrs.filesAttr,$scope.model[$attrs.filesAttr]||($scope.model[$attrs.filesAttr]={}),$scope.model[$attrs.removeFilesAttr]||($scope.model[$attrs.removeFilesAttr]=[]),$scope.$watch("model."+$attrs.filesAttr,function(newVal){if(newVal){var keys=_.keys(newVal);keys=_.reduce(keys,function(arr,num){return arr.push(parseInt(num)),arr},[]),keys.sort(),$scope.uploadedFileKeys=keys}},!0),$attrs.fileDescriptionsAttr&&($scope.descriptions={},$scope.$watch("model."+$attrs.fileDescriptionsAttr,function(val){if(void 0!==val){if(!val||val.length!=$scope.model[$attrs.filesAttr].length){var prevValue=$scope.model[$attrs.fileDescriptionsAttr];$scope.model[$attrs.fileDescriptionsAttr]={};for(var i in $scope.model[$attrs.filesAttr])$scope.model[$attrs.fileDescriptionsAttr][i]=prevValue&&prevValue[i]?prevValue[i]:""}$scope.descriptions=$scope.model[$attrs.fileDescriptionsAttr]}})),this.uploader=new FileUploader($scope.uploaderParams);var self=this;this.uploader.onSuccessItem=function(item,response,status,headers){completeUpload(response),self.uploader.removeFromQueue(item)},this.uploader.onErrorItem=function(file,response,status,headers){console.info("onErrorItem",file,response,status,headers)},this.uploader.onBeforeUploadItem=function(fileItem){userService.isAuth()&&(fileItem.headers={"X-AUTH-TOKEN":userService.getUser().token})},this.deleteFile=function(model,key){var name=model[$attrs.filesAttr][key];$attrs.fileDescriptionsAttr&&delete model[$attrs.fileDescriptionsAttr][key],delete model[$attrs.filesAttr][key],model[$attrs.removeFilesAttr].push(name)},this.baseName=function(path){return path.slice(path.lastIndexOf("/")+1)},this.getMaxKey=function(obj){var keys=_.keys(obj),max=keys.length>0?_.max(keys,function(num){return parseInt(num)}):0;return parseInt(max)},$scope.urlUploaderProcess=!1,this.uploadByUrl=function(url){if($scope.urlUploaderParams&&url&&!$scope.urlUploaderProcess){$scope.urlUploaderProcess=!0;var promise=$http.post($scope.urlUploaderParams.url,"",{params:{url:encodeURI(url)},headers:{"Content-Type":"text/plain",Accept:"*/*"}});promise.then(function(){$scope.urlUploaderProcess=!1}),promise.success(function(response){completeUpload(response),$scope.fileUrl=null}),promise.error(function(){alert("Upload error!")})}}},templateUrl:templateUrl}}angular.module(MVC_STARTER_APP).directive("fileUpload",["FileUploader","$http","userService",FileUpload])}(angular,_),function(window,angular,undefined){"use strict";function match($parse){return{require:"?ngModel",restrict:"A",link:function(scope,elem,attrs,ctrl){function parser(viewValue){var matchValue=getMatchValue();return isEmpty(matchValue)&&isEmpty(viewValue)||viewValue===matchValue?(ctrl.$setValidity("match",!0),""===viewValue||viewValue===undefined?null:viewValue):(ctrl.$setValidity("match",!1),null)}function formatter(modelValue){return null===modelValue?ctrl.$isEmpty(ctrl.$viewValue)?null:ctrl.$viewValue:modelValue}function getMatchValue(){var match=matchGetter(scope);return angular.isObject(match)&&match.hasOwnProperty("$viewValue")&&(match=match.$viewValue),match}function isEmpty(value){return null===value||value===undefined||""===value||value===!1}if(!ctrl)return void(console&&console.warn&&console.warn("Match validation requires ngModel to be on the element"));var matchGetter=$parse(attrs.match),modelSetter=$parse(attrs.ngModel).assign;scope.$watch(getMatchValue,function(){modelSetter(scope,parser(ctrl.$viewValue))}),ctrl.$parsers.unshift(parser),ctrl.$formatters.unshift(formatter)}}}angular.module(MVC_STARTER_APP).directive("match",match),match.$inject=["$parse"]}(window,window.angular),function(angular){function NgThumb($window){var helper={support:!(!$window.FileReader||!$window.CanvasRenderingContext2D),isFile:function(item){return angular.isObject(item)&&item instanceof $window.File},isImage:function(type){return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)},isImageFile:function(file){var type="|"+file.type.slice(file.type.lastIndexOf("/")+1)+"|";return this.isImage(type)},isImageUrl:function(file){var type=file.split(".").pop().toLowerCase()+"|";return this.isImage(type)}},draw=function(canvas,img,params){var width=params.width||img.width/img.height*params.height,height=params.height||img.height/img.width*params.width;canvas.attr({width:width,height:height}),canvas[0].getContext("2d").drawImage(img,0,0,width,height)};return{restrict:"A",template:'<canvas ng-show="visible" />',link:function(scope,element,attributes){function onLoadFile(event){var img=new Image;img.onload=onLoadImage,img.src=event.target.result}function onLoadImage(){draw(canvas,this,params)}if(helper.support){var params=scope.$eval(attributes.ngThumb),canvas=element.find("canvas");if("string"==typeof params.file){if(!helper.isImageUrl(params.file))return;scope.visible=!0;var img=new Image;img.src=params.file,img.onload=onLoadImage}else{if(!helper.isFile(params.file))return;if(!helper.isImageFile(params.file))return;scope.visible=!0;var reader=new FileReader;reader.onload=onLoadFile,reader.readAsDataURL(params.file)}}}}}angular.module(MVC_STARTER_APP).directive("ngThumb",["$window",NgThumb])}(angular),function(angular,_){angular.module(MVC_STARTER_APP).directive("previewSrc",[function(){return{restrict:"A",scope:{previewSrc:"="},link:function($scope,elem,attrs){$scope.$watch("previewSrc",function(newVal){if(!newVal)return void elem.hide();var keys=_.keys(newVal);if(keys.length>0){keys=_.reduce(keys,function(arr,num){return arr.push(parseInt(num)),arr},[]),keys.sort();var src=$scope.previewSrc[keys[0]];elem.attr("src",src),elem.show()}else elem.attr("src",""),elem.hide()},!0)}}}])}(angular,_),function(angular){function StringToDate(){return{restrict:"A",require:"ngModel",priority:0,link:function($scope,element,attrs,ngModel){ngModel.$formatters.unshift(function(value){return angular.isString(value)?new Date(value):value})}}}angular.module(MVC_STARTER_APP).directive("stringToDate",StringToDate)}(angular),function(angular){angular.module(MVC_STARTER_APP).config(["$translateProvider",function($translateProvider){$translateProvider.translations("ru",{Users:"Пользователи","Login error":"Ошибка входа",Username:"Имя пользователя",Password:"Пароль",Login:"Вход","Not found":"404 страница не найдена",Add:"Создать",Save:"Сохранить",Cancel:"Отменить","Error saving":"Ошибка сохранения",Active:"Активность",Fio:"ФИО","Confirm password":"Подтверждение пароля",Avatar:"Аватар",Phone:"Телефон",Text:"Текст",Email:"Электронный адрес",Role:"Роль",Actions:"Действия","Field is required":"Поле обязательно к заполнению","Invalid field value":"Неверное значение поля","Filed to short":"Значение слишком короткое","Field to long":"Значение слишком длинное","Passwords does not match":"Пароли не совпадают","Email incorrect":"Элекстронный адрес введен неверно","Uploaded files":"Загруженные файла","Upload queue":"Очередь загрузки","Upload by url":"Загрузить по URL",Upload:"Загрузить",Name:"Имя",Status:"Статус",Info:"Инфо",Progress:"Прогресс",Remove:"Удалить","Confirm remove?":"Подтвердить удаление?","Queue length":"Размер очереди"}),$translateProvider.preferredLanguage("ru"),$translateProvider.useSanitizeValueStrategy(null)}])}(angular);